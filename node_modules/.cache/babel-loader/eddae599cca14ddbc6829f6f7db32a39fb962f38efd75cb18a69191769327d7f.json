{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactWedding-main\\\\src\\\\components\\\\Family\\\\FamilyCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LazyLoad from 'react-lazy-load';\nimport { groomFamily } from '../../utils/FamilyData';\nimport { motion } from 'framer-motion';\nimport './Family.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst hiddenMask = `repeating-linear-gradient(to right, rgba(0,0,0,0) 0px, rgba(0,0,0,0) 30px, rgba(0,0,0,1) 30px, rgba(0,0,0,1) 30px)`;\nconst visibleMask = `repeating-linear-gradient(to right, rgba(0,0,0,0) 0px, rgba(0,0,0,0) 0px, rgba(0,0,0,1) 0px, rgba(0,0,0,1) 30px)`;\nconst Card = () => {\n  _s();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: groomFamily.map((familyitem, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sectionFamily__people\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sectionFamily__people--image\",\n          children: /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: false,\n            animate: isLoaded && isInView ? {\n              WebkitMaskImage: visibleMask,\n              maskImage: visibleMask\n            } : {\n              WebkitMaskImage: hiddenMask,\n              maskImage: hiddenMask\n            },\n            transition: {\n              duration: 1,\n              delay: 1\n            },\n            viewport: {\n              once: true\n            },\n            onViewportEnter: () => setIsInView(true),\n            children: /*#__PURE__*/_jsxDEV(LazyLoad, {\n              threshold: 0.95,\n              children: /*#__PURE__*/_jsxDEV(\"picture\", {\n                children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                  srcset: require(`../../assets${familyitem.webp}`),\n                  type: \"image/webp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n                  srcset: require(`../../assets${familyitem.img}`),\n                  type: \"image/jpeg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: require(`../../assets${familyitem.img}`).default,\n                  alt: familyitem.name,\n                  onLoad: () => setIsLoaded(true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sectionFamily__people--name\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [familyitem.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: familyitem.relation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(Card, \"EqtR6c0CUilpdV0QiEACs74+89Q=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","LazyLoad","groomFamily","motion","jsxDEV","_jsxDEV","Fragment","_Fragment","hiddenMask","visibleMask","Card","_s","isLoaded","setIsLoaded","isInView","setIsInView","children","map","familyitem","index","className","div","initial","animate","WebkitMaskImage","maskImage","transition","duration","delay","viewport","once","onViewportEnter","threshold","srcset","require","webp","type","fileName","_jsxFileName","lineNumber","columnNumber","img","src","default","alt","name","onLoad","relation","_c","$RefreshReg$"],"sources":["F:/ReactWedding-main/src/components/Family/FamilyCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport LazyLoad from 'react-lazy-load';\nimport { groomFamily } from '../../utils/FamilyData';\nimport { motion } from 'framer-motion';\nimport './Family.scss';\n\nconst hiddenMask = `repeating-linear-gradient(to right, rgba(0,0,0,0) 0px, rgba(0,0,0,0) 30px, rgba(0,0,0,1) 30px, rgba(0,0,0,1) 30px)`;\nconst visibleMask = `repeating-linear-gradient(to right, rgba(0,0,0,0) 0px, rgba(0,0,0,0) 0px, rgba(0,0,0,1) 0px, rgba(0,0,0,1) 30px)`;\n\nconst Card = () => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n\n  return (\n    <>\n        {groomFamily.map((familyitem, index) => {\n            return (\n                <div className='sectionFamily__people' key={index}>\n                    <div className='sectionFamily__people--image'>\n                        <motion.div\n                            initial={false}\n                            animate={\n                            isLoaded && isInView\n                                ? { WebkitMaskImage: visibleMask, maskImage: visibleMask }\n                                : { WebkitMaskImage: hiddenMask, maskImage: hiddenMask }\n                            }\n                            transition={{ duration: 1, delay: 1 }}\n                            viewport={{ once: true }}\n                            onViewportEnter={() => setIsInView(true)}\n                        >\n                            <LazyLoad threshold={0.95}>\n                                <picture>\n                                    <source srcset={require(`../../assets${familyitem.webp}`)} type=\"image/webp\" />\n                                    <source srcset={require(`../../assets${familyitem.img}`)} type=\"image/jpeg\" />\n                                    <img src={require(`../../assets${familyitem.img}`).default} alt={familyitem.name} onLoad={() => setIsLoaded(true)} />\n                                </picture>\n                                {/* <img src={familyitem.img} alt={familyitem.name} onLoad={() => setIsLoaded(true)} /> */}\n                            </LazyLoad>\n                        </motion.div>                        \n                    </div>\n                    <div className='sectionFamily__people--name'>\n                        <p>{familyitem.name} <span>{familyitem.relation}</span></p>\n                    </div>\n                </div>\n            );\n        })}        \n    </>\n  )\n}\n\nexport default Card"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}